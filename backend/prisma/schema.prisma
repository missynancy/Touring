// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  username  String @unique
  email String @unique
  password String
  blogs Blog[]
}

model Session {
  id        String   @id @default(cuid())
  sid       String   @unique
  sess      Json
  expire    DateTime
}


model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category{
    id          Int     @id @default(autoincrement())
    name        String
    safaris     Safaris[]
    
  }

model Safaris{
    id          Int     @id @default(autoincrement())
    name        String
    content     String
    image1      Bytes
    categoryId  Int
    category    Category @relation(fields:[categoryId], references:[id])
    packages    Package[]
    lowSeason   String
    peakSeason  String
  }

model Package{
   id          Int     @id @default(autoincrement())
   name        String
   content     String
   safarisId   Int
   safari      Safaris @relation(fields: [safarisId], references:[id])

  }

model Rates{
    id          Int     @id @default(autoincrement())
    name        String
    content     String
  }

model Inclusive{
    id          Int     @id @default(autoincrement())
    name        String
    content     String

  }
model Exclusive{
    id          Int     @id @default(autoincrement())
    name        String
    content     String
  }
model Animals{
    id          Int     @id @default(autoincrement())
    name        String
    content     String
  }

model Destination{
    id          Int     @id @default(autoincrement())
    name        String
    content     String

  }
